{"version":3,"sources":["main/script.js","_include.js"],"names":["initSplideMainSlider","splideMainSlider","Splide","type","perPage","perMove","width","fixedWidth","fixedHeight","updateOnMove","focus","trimSpace","start","gap","mount","mainSliderSplide","document","querySelector","products","querySelectorAll","on","pFirst","classList","contains","pLast","length","btnPrev","btnNext","add","disabled","remove","initSplideRooms","splideRooms","drag","roomsSplide","rooms","roomsList","roomPaginationButton","wRoom","offsetWidth","parseInt","getComputedStyle","marginRight","transition","options","speed","easing","translateX","forEach","item","index","array","rFirst","rLast","style","display","addEventListener","e","target","closest","transform","initSplideTricks","splideTricks","trick","timerId","setInterval","tricks","setTimeout","clearInterval","initFuniroRiver","row","funiro","funiros","fMargin","window","margin","clientWidth","fWidth","fTranslateX","Masonry","itemSelector","columnWidth","horizontalOrder","tX"],"mappings":"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","file":"script.min.js","sourcesContent":["const initSplideMainSlider = function () {\r\n\r\n    let splideMainSlider = new Splide('.main__slider-splide', {\r\n        type: 'slide',\r\n        perPage: 2,\r\n        perMove: 1,\r\n        width: '100vw',\r\n        fixedWidth: '934px',\r\n        fixedHeight: '553px',\r\n        updateOnMove: true,\r\n        focus: 'center',\r\n        trimSpace: false,\r\n        start: 1,\r\n        gap: '2rem',\r\n    }).mount();\r\n\r\n    let mainSliderSplide = document.querySelector('.main__slider-splide'),\r\n        products = mainSliderSplide.querySelectorAll('.product.splide__slide');\r\n\r\n\r\n    splideMainSlider.on('moved', function () {\r\n        let pFirst = products[0].classList.contains('is-active'),\r\n            pLast = products[products.length - 1].classList.contains('is-active'),\r\n            btnPrev = mainSliderSplide.querySelector('.splide__arrow--prev'),\r\n            btnNext = mainSliderSplide.querySelector('.splide__arrow--next');\r\n        if (pFirst) {\r\n            btnPrev.classList.add('--disable');\r\n            btnPrev.disabled = true;\r\n        }\r\n        if (pLast) {\r\n            btnNext.classList.add('--disable');\r\n            btnNext.disabled = true;\r\n        }\r\n        if (!pFirst && !pLast) {\r\n            btnPrev.classList.remove('--disable');\r\n            btnPrev.disabled = false;\r\n            btnNext.classList.remove('--disable');\r\n            btnNext.disabled = false;\r\n        }\r\n    });\r\n}\r\n\r\nconst initSplideRooms = function () {\r\n\r\n    let splideRooms = new Splide('.main__rooms-splide', {\r\n        type: 'slide',\r\n        perPage: 0,\r\n        perMove: 0,\r\n        width: '880px',\r\n        updateOnMove: true,\r\n        focus: 'center',\r\n        gap: '1.5rem',\r\n        drag: false,\r\n    }).mount();\r\n\r\n    let roomsSplide = document.querySelector('.main__rooms-splide'),\r\n        rooms = roomsSplide.querySelectorAll('.room.splide__slide'),\r\n        roomsList = roomsSplide.querySelector('.splide__list'),\r\n        roomPaginationButton = roomsSplide.querySelectorAll('.splide__pagination__page'),\r\n        wRoom = rooms[1].offsetWidth + parseInt(getComputedStyle(rooms[0], true).marginRight),\r\n        transition = `transform ${splideRooms.options.speed}ms ${splideRooms.options.easing}`,\r\n        translateX = 0;\r\n\r\n    roomPaginationButton.forEach(function (item, index, array) {\r\n        item.disabled = true;\r\n    })\r\n\r\n    splideRooms.on('moved', function () {\r\n        let rFirst = rooms[0].classList.contains('is-active'),\r\n            rLast = rooms[rooms.length - 1].classList.contains('is-active'),\r\n            btnPrev = roomsSplide.querySelector('.splide__arrow--prev'),\r\n            btnNext = roomsSplide.querySelector('.splide__arrow--next');\r\n        if (rFirst) {\r\n            btnPrev.style.display = 'none';\r\n        }\r\n        if (rLast) {\r\n            btnNext.style.display = 'none';\r\n        }\r\n        if (!rFirst && !rLast) {\r\n            btnPrev.style.display = 'flex';\r\n            btnNext.style.display = 'flex';\r\n        }\r\n    });\r\n\r\n    const prevRoom = function (e) {\r\n        let btn = e.target.closest('.splide__arrow--prev');\r\n        if (!btn) return;\r\n\r\n        translateX -= wRoom;\r\n        roomsList.style.transform = 'translateX(' + -translateX + 'px)';\r\n        roomsList.style.transition = transition;\r\n    }\r\n\r\n    const nextRoom = function (e) {\r\n        let btn = e.target.closest('.splide__arrow--next');\r\n        if (!btn) return;\r\n\r\n        translateX += wRoom;\r\n        roomsList.style.transform = 'translateX(' + -translateX + 'px)';\r\n        roomsList.style.transition = transition;\r\n    }\r\n\r\n    roomsSplide.addEventListener(\"click\", prevRoom);\r\n    roomsSplide.addEventListener(\"click\", nextRoom);\r\n\r\n}\r\n\r\nconst initSplideTricks = function () {\r\n\r\n    let splideTricks = new Splide('.main__tricks-splide', {\r\n        type: 'slide',\r\n        perPage: 3,\r\n        perMove: 2,\r\n        width: '1285px',\r\n        gap: '2rem',\r\n    }).mount();\r\n\r\n    let trick = document.querySelectorAll('.trick');\r\n\r\n    let timerId = setInterval(() => {\r\n        if (trick[0].classList.contains('is-active')) {\r\n            let tricks = document.querySelectorAll('.trick.is-visible');\r\n            tricks[0].classList.remove('is-active');\r\n            tricks[1].classList.add('is-active');\r\n        }\r\n    }, 10);\r\n\r\n    setTimeout(() => clearInterval(timerId), 5000);\r\n\r\n    splideTricks.on('moved', function () {\r\n        let tricks = document.querySelectorAll('.trick.is-visible');\r\n        tricks[0].classList.remove('is-active');\r\n        tricks[1].classList.add('is-active');\r\n        tricks[2].classList.remove('is-active');\r\n    });\r\n\r\n}\r\n\r\nconst initFuniroRiver = function (row) {\r\n\r\n    let funiro = document.querySelector('.funiro'),\r\n        funiros = funiro.querySelectorAll('.funiro__item'),\r\n        fMargin = 2 * parseInt(window.getComputedStyle(funiros[0], null).margin);\r\n\r\n    funiros.forEach(function (item, index, array) {\r\n        item.style.width = item.clientWidth / 2 + 'px';\r\n    })\r\n\r\n    let fWidth = funiro.clientWidth / row + fMargin * funiros.length,\r\n        fTranslateX = 0\r\n\r\n    funiro.style.width = fWidth + 'px';\r\n\r\n    new Masonry( '.funiro', {\r\n        itemSelector: '.funiro__item',\r\n        columnWidth: 2,\r\n        horizontalOrder: true\r\n    });\r\n\r\n    function funiroTranslate(tX) {\r\n        if(fTranslateX < -fWidth){\r\n            fTranslateX = 0;\r\n            funiro.style.transform = 'translateX(' + fTranslateX + 'px)';\r\n        } else {\r\n            fTranslateX -= tX;\r\n            funiro.style.transform = 'translateX(' + fTranslateX + 'px)';\r\n        }\r\n    }\r\n\r\n    setInterval(funiroTranslate, 7.5, 1);\r\n}\r\n","window.addEventListener(\"DOMContentLoaded\", initSplideMainSlider);\r\nwindow.addEventListener(\"DOMContentLoaded\", initSplideRooms);\r\nwindow.addEventListener(\"DOMContentLoaded\", initSplideTricks);\r\nwindow.addEventListener(\"load\", initFuniroRiver(2));"]}